@model IEnumerable<PABP_Projekat2.Models.Customer>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				<a asp-action="Index" asp-controller="Customers" asp-route-sortName="@ViewData["sortName"]">@Html.DisplayNameFor(model => model.CompanyName)</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ContactName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.ContactTitle)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Address)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.City)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Region)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PostalCode)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Country)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Phone)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Fax)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.CompanyName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ContactName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ContactTitle)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Address)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.City)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Region)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PostalCode)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Country)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Phone)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Fax)
				</td>
				<td>
					<a asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a> |
					<a asp-action="Details" asp-route-id="@item.CustomerId">Details</a> |
					<a asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>


@{ int totalPages = (int)Math.Ceiling((int)ViewData["totalCount"] / (decimal)ViewData["customersByPage"]);
	int currentPage = (int)ViewData["currentPage"];
}

<div class="row">
	<div class="col-md-2">
		@using (Html.BeginForm("Index", "Customers", FormMethod.Post, new { }))
		{
			<div class="form-group">
				@Html.Label("", "Customers by page:", new { @class = "control-label" })
				@Html.DropDownList("customersByPage",
					 new SelectList(new List<decimal> { 5, 10, 20 }),
					 new { id = "pagesizelist", @class = "form-control" })
			</div>

		}
	</div>
</div>


<a asp-action="Index" asp-controller="Customers" asp-route-currentPage="0">First </a>

@{
		if (currentPage > 1)
		{
			<a asp-action="Index" asp-controller="Customers" asp-route-currentPage="@(currentPage - 1)">Previous </a>
		}

		for (int i = currentPage - 2; i < currentPage; i++)
		{
			if (i > 0)
			{
				<a asp-action="Index" asp-controller="Customers" asp-route-currentPage="@i">@i </a>
			}
		}

		<span>@currentPage </span>

		for (int i = currentPage + 1; i <= currentPage + 2 && i <= totalPages; i++)
		{
			<a asp-action="Index" asp-controller="Customers" asp-route-currentPage="@i">@i </a>
		}

		if (currentPage + 1 <= totalPages)
		{
			<a asp-action="Index" asp-controller="Customers" asp-route-currentPage="@(currentPage + 1)">Next </a>
		}
}

<a asp-action="Index" asp-controller="Customers" asp-route-currentPage="@totalPages">Last</a>


@section Scripts{
	<script type="text/javascript">
		$('#pagesizelist').on('change', function (event) {
			var form = $(event.target).parents('form');

			form.submit();
		});
	</script>
}

